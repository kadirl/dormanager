import bson
from aiogram import Router, types, F
from aiogram.filters.command import Command, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup

from app.database.user import User, UserCollection
from app.states import MainState, NotificationState
from app.keyboards import main_menu, notify_menu
from app.utils import clear_history, append_history, pop_history
from app import bot

router = Router()


@router.message(Command('notify'))
@router.message(MainState.registered_user, F.text == '–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
async def create_notification(message: types.Message, state: FSMContext):
    await state.set_state(NotificationState.content)
    await message.answer(
        '–û —á–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—ä—è–≤–∏—Ç—å? –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–≤–∏–¥—è—Ç –≤—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã, —É –∫–æ–≥–æ –≤–∫–ª—é—á–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
        reply_markup=notify_menu.get_cancel()
    )


@router.message(NotificationState.content, F.text == '–û—Ç–º–µ–Ω–∏—Ç—å')
async def send_notification(message: types.Message, state: FSMContext):
    await message.answer('–û—Ç–º–µ–Ω—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ üëÄ')
    await state.set_state(MainState.registered_user)
    await clear_history(state)


@router.message(NotificationState.content)
async def send_notification(message: types.Message, state: FSMContext):
    sender = UserCollection.get_user_by_tg_id(message.from_user.id)
    text = f'{sender.name} –∏–∑ –∫–æ–º–Ω–∞—Ç—ã {sender.room} —Ö–æ—á–µ—Ç –∫–æ–µ-—á–µ–º —Å–æ –≤—Å–µ–º–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:\n\n"{message.text}"'

    users = UserCollection.get_regular_notification_allowed_users()

    for user in users:
        if user.tg_id == str(message.from_user.id):
            await message.answer(f'–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n–ï–≥–æ –ø–æ–ª—É—á–∏–ª–∏ {len(users)} –∂–∏—Ç–µ–ª–µ–π –æ–±—â–µ–∂–∏—Ç–∏—è.')
            await message.answer('–ß–µ–≥–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ?', reply_markup=main_menu.get_registered_user())
            continue
        await bot.send_message(user.chat_id, text=text)

    await state.set_state(MainState.registered_user)
    await clear_history(state)

